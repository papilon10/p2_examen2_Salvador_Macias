/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package p2_examen2_salvador_macias;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author Apple
 */
public class LineaProduccion extends javax.swing.JFrame {

    /**
     * Creates new form LineaProduccion
     */
    public LineaProduccion() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pg_ensamblaje = new javax.swing.JProgressBar();
        pg_pintura = new javax.swing.JProgressBar();
        pg_empaquetado = new javax.swing.JProgressBar();
        pg_ciclos = new javax.swing.JProgressBar();
        btnCargar = new javax.swing.JButton();
        btnIniciar = new javax.swing.JButton();
        lbl_ciclos = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        empaquetado = new javax.swing.JLabel();
        pintura = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnCargar.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        btnCargar.setText("Cargar");
        btnCargar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCargarMouseClicked(evt);
            }
        });
        btnCargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarActionPerformed(evt);
            }
        });

        btnIniciar.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        btnIniciar.setText("Iniciar simulacion");
        btnIniciar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnIniciarMouseClicked(evt);
            }
        });
        btnIniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIniciarActionPerformed(evt);
            }
        });

        lbl_ciclos.setText("jLabel1");

        jLabel1.setText("ensamblaje");

        jLabel2.setText("progreso de simulacion");

        empaquetado.setText("empaquetado");

        pintura.setText("pintura");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pg_empaquetado, javax.swing.GroupLayout.PREFERRED_SIZE, 493, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(pg_pintura, javax.swing.GroupLayout.DEFAULT_SIZE, 493, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(43, 43, 43)
                                        .addComponent(btnCargar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(118, 118, 118)
                                        .addComponent(btnIniciar))
                                    .addComponent(pg_ensamblaje, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(pg_ciclos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                                        .addComponent(jLabel2))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(98, 98, 98)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(empaquetado)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel1)
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                    .addComponent(pintura)
                                                    .addGap(16, 16, 16)))))))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbl_ciclos, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(80, 80, 80))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbl_ciclos, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pg_ensamblaje, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(pg_pintura, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                        .addComponent(pintura)
                        .addGap(65, 65, 65)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pg_empaquetado, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(pg_ciclos, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(empaquetado)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnIniciar, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCargar, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCargarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCargarMouseClicked
        JFileChooser fileChooser = new JFileChooser();
        int resultado = fileChooser.showOpenDialog(this);

        if (resultado == JFileChooser.APPROVE_OPTION) {
            File archivo = fileChooser.getSelectedFile();

            try (BufferedReader br = new BufferedReader(new FileReader(archivo))) {
                etapas.clear();
                String linea;
                while ((linea = br.readLine()) != null) {
                    String[] partes = linea.split(",");
                    String nombre = partes[0].trim();
                    int unidades = Integer.parseInt(partes[1].trim());
                    int tiempo = Integer.parseInt(partes[2].trim());
                    etapas.add(new etapa(nombre, unidades, tiempo));
                }

                if (etapas.size() >= 3) {
                    pg_ensamblaje.setMaximum(etapas.get(0).getUnidadesPorProcesar());
                    pg_pintura.setMaximum(etapas.get(1).getUnidadesPorProcesar());
                    pg_empaquetado.setMaximum(etapas.get(2).getUnidadesPorProcesar());
                    pg_ciclos.setMaximum(4);
                    pg_ciclos.setValue(0);
                    lbl_ciclos.setText("Ciclo actual: Día 1");

                    pg_ensamblaje.setValue(0);
                    pg_pintura.setValue(0);
                    pg_empaquetado.setValue(0);

                    JOptionPane.showMessageDialog(this, "se cargo el archivo correctamente");
                } else {
                    JOptionPane.showMessageDialog(this, "cantidad de etapas insuficentes para cargar archivo");
                }

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "error");
            }
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_btnCargarMouseClicked

    private void btnCargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarActionPerformed

        // TODO add your handling code here:
    }//GEN-LAST:event_btnCargarActionPerformed

    private void btnIniciarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnIniciarMouseClicked
        if (etapas.size() < 3) {
            JOptionPane.showMessageDialog(this, "no hay un archivo cargado ");
            return;
        }

        etapa ensamblaje = etapas.get(0);
        etapa pintura = etapas.get(1);
        etapa empaquetado = etapas.get(2);

        final boolean[] esDia = {true};

        Thread hiloCiclo = new Thread(() -> {
            for (int ciclo = 1; ciclo <= 4; ciclo++) {
                esDia[0] = (ciclo % 2 != 0);

                int finalCiclo = ciclo;
                SwingUtilities.invokeLater(() -> {
                    lbl_ciclos.setText("Ciclo actual: " + (esDia[0] ? "Día " : "Noche ") + ((finalCiclo + 1) / 2));
                    pg_ciclos.setValue(finalCiclo);
                });

                try {
                    Thread.sleep(3000);
                } catch (InterruptedException e) {
                    break;
                }
            }
        });

        Thread hiloEnsamblaje = new Thread(() -> {
            while (ensamblaje.getUnidadesProcesadas() < ensamblaje.getUnidadesPorProcesar()) {
                if (!esDia[0]) {
                    try {
                        Thread.sleep(ensamblaje.getTiempoPorUnidad() * 500);
                    } catch (InterruptedException e) {
                    }
                    ensamblaje.setUnidadesProcesadas(ensamblaje.getUnidadesProcesadas() + 1);
                    pg_ensamblaje.setValue(ensamblaje.getUnidadesProcesadas());
                } else {
                    try {
                        Thread.sleep(200);
                    } catch (InterruptedException e) {
                    }
                }
            }
        });

        Thread hiloPintura = new Thread(() -> {
            while (pintura.getUnidadesProcesadas() < pintura.getUnidadesPorProcesar()) {
                if (esDia[0] && ensamblaje.getUnidadesProcesadas() > pintura.getUnidadesProcesadas()) {
                    try {
                        Thread.sleep(pintura.getTiempoPorUnidad() * 500);
                    } catch (InterruptedException e) {
                    }
                    pintura.setUnidadesProcesadas(pintura.getUnidadesProcesadas() + 1);
                    pg_pintura.setValue(pintura.getUnidadesProcesadas());
                } else {
                    try {
                        Thread.sleep(200);
                    } catch (InterruptedException e) {
                    }
                }
            }
        });
        
        
          Thread hiloEmpaquetado = new Thread(() -> {
            while (empaquetado.getUnidadesProcesadas() < empaquetado.getUnidadesPorProcesar()) {
                if (esDia[0] && pintura.getUnidadesProcesadas() > empaquetado.getUnidadesProcesadas()) {
                    try {
                        Thread.sleep(empaquetado.getTiempoPorUnidad() * 500);
                    } catch (InterruptedException e) {
                    }
                    empaquetado.setUnidadesProcesadas(empaquetado.getUnidadesProcesadas() + 1);
                    pg_empaquetado.setValue(empaquetado.getUnidadesProcesadas());
                } else {
                    try {
                        Thread.sleep(200);
                    } catch (InterruptedException e) {
                    }
                }
            }
        });

        hiloCiclo.start();
        hiloEnsamblaje.start();
        hiloPintura.start();
        hiloEmpaquetado.start();
        
        
    }//GEN-LAST:event_btnIniciarMouseClicked

    private void btnIniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIniciarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnIniciarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LineaProduccion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LineaProduccion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LineaProduccion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LineaProduccion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LineaProduccion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCargar;
    private javax.swing.JButton btnIniciar;
    private javax.swing.JLabel empaquetado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lbl_ciclos;
    private javax.swing.JProgressBar pg_ciclos;
    private javax.swing.JProgressBar pg_empaquetado;
    private javax.swing.JProgressBar pg_ensamblaje;
    private javax.swing.JProgressBar pg_pintura;
    private javax.swing.JLabel pintura;
    // End of variables declaration//GEN-END:variables
        private ArrayList<etapa> etapas = new ArrayList<>();

}
